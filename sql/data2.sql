-- Create the database if it doesn't exist
CREATE DATABASE IF NOT EXISTS covoiturage_db;

USE covoiturage_db;

-- Student Table
CREATE TABLE IF NOT EXISTS ETUDIANT (
    NUM_ETUDIANT INT NOT NULL,
    PRENOM VARCHAR(100) NOT NULL,
    NOM VARCHAR(100) NOT NULL,
    PRIMARY KEY (NUM_ETUDIANT)
);

-- Conducteur Table
CREATE TABLE IF NOT EXISTS CONDUCTEUR (
    NUM_CONDUCTEUR INT NOT NULL,
    PRIMARY KEY (NUM_CONDUCTEUR),
    FOREIGN KEY (NUM_CONDUCTEUR) REFERENCES ETUDIANT(NUM_ETUDIANT) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Passager Table
CREATE TABLE IF NOT EXISTS PASSAGER (
    NUM_PASSAGER INT NOT NULL,
    PRIMARY KEY (NUM_PASSAGER),
    FOREIGN KEY (NUM_PASSAGER) REFERENCES ETUDIANT(NUM_ETUDIANT) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Voiture Table
CREATE TABLE IF NOT EXISTS VOITURE (
    NUM_IMMATRICULE INT,
    NUM_CONDUCTEUR INT NOT NULL,
    TYPE_VOITURE VARCHAR(100),
    COULEUR VARCHAR(100), -- Removed the extra 'NOT' after 'COULEUR VARCHAR(100)'
    ETAT VARCHAR(100),
    NBR_PASSAGER INT,
    PRIMARY KEY (NUM_IMMATRICULE),
    FOREIGN KEY (NUM_CONDUCTEUR) REFERENCES CONDUCTEUR(NUM_CONDUCTEUR) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT VOITURE_UNIQUE UNIQUE (NUM_IMMATRICULE, NUM_CONDUCTEUR)
);

-- Trajet Table
CREATE TABLE IF NOT EXISTS TRAJET (
    NUM_TRAJET INT AUTO_INCREMENT PRIMARY KEY, -- Changed to AUTO_INCREMENT and moved PRIMARY KEY declaration
    NUM_IMMATRICULE INT NOT NULL,
    DATE_DEPART TIMESTAMP NOT NULL,
    DATE_ARRIVEE TIMESTAMP NOT NULL,
    ADRESSE_ARRIVEE VARCHAR(100) NOT NULL,
    CODE_POSTAL INT NOT NULL,
    NBR_ESCALES INT NOT NULL DEFAULT 0,
    PRIX_KILOMETRAGE INT NOT NULL,
    DISTANCE_TOTAL INT NOT NULL,
    DUREE_ESTIME INT NOT NULL,
    FOREIGN KEY (NUM_IMMATRICULE) REFERENCES VOITURE(NUM_IMMATRICULE) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Escale Table
CREATE TABLE IF NOT EXISTS ESCALE (
    NUM_ESCALE INT AUTO_INCREMENT PRIMARY KEY,
    NUM_TRAJET INT NOT NULL,
    ADRESSE VARCHAR(100) NOT NULL,
    CODE_POSTAL INT NOT NULL,
    HEURE_ARRIVEE TIMESTAMP NOT NULL,
    VALIDATION_ESCALE BOOLEAN NOT NULL DEFAULT FALSE,
    FOREIGN KEY (NUM_TRAJET) REFERENCES TRAJET(NUM_TRAJET) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Proposition Table
CREATE TABLE IF NOT EXISTS PROPOSITION (
    NUM_ESCALE INT NOT NULL,
    NUM_PASSAGER INT NOT NULL,
    PRIMARY KEY  (NUM_ESCALE, NUM_PASSAGER),
    FOREIGN KEY (NUM_ESCALE) REFERENCES ESCALE(NUM_ESCALE) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (NUM_PASSAGER) REFERENCES PASSAGER(NUM_PASSAGER) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Reservation Table
CREATE TABLE IF NOT EXISTS RESERVATION (
    NUM_TRAJET INT NOT NULL,
    NUM_PASSAGER INT NOT NULL,
    VALIDATION_RESERVATION BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (NUM_TRAJET, NUM_PASSAGER),
    FOREIGN KEY (NUM_TRAJET) REFERENCES TRAJET(NUM_TRAJET) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (NUM_PASSAGER) REFERENCES PASSAGER(NUM_PASSAGER) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Evaluation Table
CREATE TABLE IF NOT EXISTS EVALUATION (
    NUM_ETUDIANT_EVALUE INT NOT NULL,
    NUM_TRAJET INT NOT NULL,
    NUM_ETUDIANT_EVALUATEUR INT NOT NULL,
    NOTE INT NOT NULL,
    CHECK (NOTE >=1 AND NOTE <=5),
    PRIMARY KEY  (NUM_ETUDIANT_EVALUE, NUM_ETUDIANT_EVALUATEUR, NUM_TRAJET),
    FOREIGN KEY (NUM_TRAJET) REFERENCES TRAJET(NUM_TRAJET) ON DELETE CASCADE,
    FOREIGN KEY (NUM_ETUDIANT_EVALUATEUR) REFERENCES ETUDIANT(NUM_ETUDIANT) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (NUM_ETUDIANT_EVALUE) REFERENCES ETUDIANT(NUM_ETUDIANT) ON DELETE CASCADE ON UPDATE CASCADE
);


